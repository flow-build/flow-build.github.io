(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[3159],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var i=r.createContext({}),l=function(n){var e=r.useContext(i),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},u=function(n){var e=l(n.components);return r.createElement(i.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,i=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),c=l(t),d=a,k=c["".concat(i,".").concat(d)]||c[d]||m[d]||o;return t?r.createElement(k,p(p({ref:e},u),{},{components:t})):r.createElement(k,p({ref:e},u))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,p=new Array(o);p[0]=c;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=n,s.mdxType="string"==typeof n?n:a,p[1]=s;for(var l=2;l<o;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4733:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return l},default:function(){return m}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),p=["components"],s={},i={unversionedId:"engine/examples/forca",id:"engine/examples/forca",isDocsHomePage:!1,title:"forca",description:"Descri\xe7\xe3o",source:"@site/docs/engine/examples/forca.md",sourceDirName:"engine/examples",slug:"/engine/examples/forca",permalink:"/docs/engine/examples/forca",editUrl:"https://bitbucket.org/fdtedsd/workflow-api-doc/src/master/docs/engine/examples/forca.md",version:"current",frontMatter:{},sidebar:"engineSidebar",previous:{title:"flow_example",permalink:"/docs/engine/examples/flow_example"},next:{title:"http_example",permalink:"/docs/engine/examples/http_example"}},l=[{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",children:[]},{value:"Diagrama",id:"diagrama",children:[]},{value:"Blueprint",id:"blueprint",children:[]}],u={toc:l};function m(n){var e=n.components,s=(0,a.Z)(n,p);return(0,o.kt)("wrapper",(0,r.Z)({},u,s,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"descri\xe7\xe3o"},"Descri\xe7\xe3o"),(0,o.kt)("p",null,"O exemplo a seguir mostra o processo de um jogo de forca."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 1 ")," - Sempre se inicia o ",(0,o.kt)("a",{parentName:"p",href:"/docs/documentation/processos"},"processo")," com um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/startNode"},"Start"),". "),(0,o.kt)("p",{parentName:"li"}," Nesse exemplo n\xe3o h\xe1 ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"par\xe2metros")," pr\xe9-definidos para esse n\xf3. Ou seja, o objeto ",(0,o.kt)("strong",{parentName:"p"},"input_schema")," \xe9 vazio.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 2 ")," - \xc9 um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/scriptNode"},"ScriptTask"),".\nNeste n\xf3 ser\xe1 gerado os valores iniciais."),(0,o.kt)("p",{parentName:"li"}," A palavra para jogo \xe9 sorteada entre os valores da lista ",(0,o.kt)("strong",{parentName:"p"},"words"),". As palavras poss\xedveis s\xe3o  ",(0,o.kt)("strong",{parentName:"p"},"teste")," , ",(0,o.kt)("strong",{parentName:"p"},"game")," e ",(0,o.kt)("strong",{parentName:"p"},"example"),". a vari\xe1vel ",(0,o.kt)("strong",{parentName:"p"},"word")," recebe a palavra escolhida."),(0,o.kt)("p",{parentName:"li"},"O contator de erros ",(0,o.kt)("strong",{parentName:"p"},"errorCount")," \xe9 inicializada com 0.\n",(0,o.kt)("strong",{parentName:"p"},"isPrivate")," recebe o valor ",(0,o.kt)("strong",{parentName:"p"},"true"),"  e ",(0,o.kt)("strong",{parentName:"p"},"state")," \xe9 inicializado com a string ",(0,o.kt)("strong",{parentName:"p"},"let word = ' "),".\nOnde ",(0,o.kt)("strong",{parentName:"p"},"'")," ser\xe1 a palavra sorteada por\xe9m com as letras substitu\xedda por ",(0,o.kt)("strong",{parentName:"p"},'"_"'),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 3 ")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 3 \xe9 tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/systemTaskNode"},"SystemTask")," categoria ",(0,o.kt)("strong",{parentName:"p"},"Set To bag"),"."),(0,o.kt)("p",{parentName:"li"}," Nesse n\xf3 as propriedades no objeto result s\xe3o inclu\xeddas na bag. "),(0,o.kt)("p",{parentName:"li"}," S\xe3o elas ",(0,o.kt)("strong",{parentName:"p"},"word"),", ",(0,o.kt)("strong",{parentName:"p"},"state"),", ",(0,o.kt)("strong",{parentName:"p"},"errorCounter")," e ",(0,o.kt)("strong",{parentName:"p"},"isPrivate"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 4 ")," -  O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 4 \xe9 uma ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/userTaskNode"},"UserTask"),". "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Neste n\xf3 ocorre a a\xe7\xe3o ",(0,o.kt)("strong",{parentName:"li"},"letterInput"),". Onde o usu\xe1rio escolhe uma letra."),(0,o.kt)("li",{parentName:"ul"},"A tarefa recebe da bag os valores armazenados no n\xf3 anterior."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 5 ")," - \xc9 um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/scriptNode"},"ScriptTask"),"."),(0,o.kt)("p",{parentName:"li"}," Nele ",(0,o.kt)("strong",{parentName:"p"},"userInput"),"  recebe ",(0,o.kt)("strong",{parentName:"p"},"result.activies","[0]")," e ",(0,o.kt)("strong",{parentName:"p"},"creatorId")," recebe ",(0,o.kt)("strong",{parentName:"p"},"bag.creatorId"),"."),(0,o.kt)("p",{parentName:"li"}," Nele roda a fun\xe7\xe3o que determinar\xe1 o conte\xfado de ",(0,o.kt)("strong",{parentName:"p"},"inputType"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 6 ")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 6 \xe9 tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/systemTaskNode"},"SystemTask")," categoria ",(0,o.kt)("strong",{parentName:"p"},"Set To bag"),"."),(0,o.kt)("p",{parentName:"li"},"Nesse n\xf3 os conte\xfados de ",(0,o.kt)("strong",{parentName:"p"},"letterInput")," e ",(0,o.kt)("strong",{parentName:"p"},"inputType")," s\xe3o atualizadas na bag.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 7 ")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 7 \xe9 tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/flowNode"},"FlowNode"),". "),(0,o.kt)("p",{parentName:"li"}," Neste n\xf3 \xe9 verificado qual o conte\xfado de ",(0,o.kt)("strong",{parentName:"p"},"inputType")," e a partir  disso existem 3 possibilidades de caminhos."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Se ",(0,o.kt)("strong",{parentName:"li"},"inputType")," = ",(0,o.kt)("strong",{parentName:"li"},"unauthorized")," ou  ",(0,o.kt)("strong",{parentName:"li"},"default")," (n\xe3o receber um valor v\xe1lido) retornar\xe1 para n\xf3 4. "),(0,o.kt)("li",{parentName:"ul"},"Se ",(0,o.kt)("strong",{parentName:"li"},"inputType")," = ",(0,o.kt)("strong",{parentName:"li"},"changePermission")," prosseguir\xe1 para o n\xf3 8."),(0,o.kt)("li",{parentName:"ul"},"Se ",(0,o.kt)("strong",{parentName:"li"},"inputType")," = ",(0,o.kt)("strong",{parentName:"li"},"letterInput")," prosseguir\xe1 para o n\xf3 10."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 8 ")," -  \xc9 um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/scriptNode"},"ScriptTask"),"."))),(0,o.kt)("p",null,"Altera o conte\xfado de ",(0,o.kt)("strong",{parentName:"p"},"isPrivate"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 9 ")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 9 \xe9 tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/systemTaskNode"},"SystemTask")," categoria ",(0,o.kt)("strong",{parentName:"p"},"Set To bag"),"."),(0,o.kt)("p",{parentName:"li"}," Nesse n\xf3 o conte\xfado de ",(0,o.kt)("strong",{parentName:"p"},"isPrivate")," \xe9 atualizado na bag.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 10")," -  \xc9 um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/scriptNode"},"ScriptTask"),"."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Acessa os dados da bag e roda uma fun\xe7\xe3o que aumenta o contator de erro se a letra est\xe1 errada.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Acrescenta a letra no indice correto em caso de acerto.")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 11")," -  O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 6 \xe9 tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/systemTaskNode"},"SystemTask")," categoria ",(0,o.kt)("strong",{parentName:"p"},"Set To bag"),"."),(0,o.kt)("p",{parentName:"li"}," Atualiza  ",(0,o.kt)("strong",{parentName:"p"},"errorCounter")," e ",(0,o.kt)("strong",{parentName:"p"},"state")," na bag.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 12")," - \xc9 um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/scriptNode"},"ScriptTask"),"."),(0,o.kt)("p",{parentName:"li"}," Verifica o error  ",(0,o.kt)("strong",{parentName:"p"},"errorCounter")," e ",(0,o.kt)("strong",{parentName:"p"},"state")," para definir o conte\xfado de ",(0,o.kt)("strong",{parentName:"p"},"nextStep"),"."),(0,o.kt)("p",{parentName:"li"}," ",(0,o.kt)("strong",{parentName:"p"},"nextStep")," pode receber ",(0,o.kt)("strong",{parentName:"p"},"victory"),", ",(0,o.kt)("strong",{parentName:"p"},"defeat")," e ",(0,o.kt)("strong",{parentName:"p"},"continue"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 13")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 7 \xe9 tipo ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/flowNode"},"FlowNode"),". "),(0,o.kt)("p",{parentName:"li"}," Neste n\xf3 \xe9 verificado qual o conte\xfado de ",(0,o.kt)("strong",{parentName:"p"},"nextStep")," e a partir  disso existem 3 possibilidades de caminhos."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Se ",(0,o.kt)("strong",{parentName:"li"},"nextStep")," = ",(0,o.kt)("strong",{parentName:"li"},"continue")," ou  ",(0,o.kt)("strong",{parentName:"li"},"default")," (n\xe3o receber um valor v\xe1lido) retornar\xe1 para n\xf3 4. "),(0,o.kt)("li",{parentName:"ul"},"Se ",(0,o.kt)("strong",{parentName:"li"},"nextStep")," = ",(0,o.kt)("strong",{parentName:"li"},"victory")," prosseguir\xe1 para o n\xf3 14."),(0,o.kt)("li",{parentName:"ul"},"Se ",(0,o.kt)("strong",{parentName:"li"},"nextStep")," = ",(0,o.kt)("strong",{parentName:"li"},"defeat")," prosseguir\xe1 para o n\xf3 15.")))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 14")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 4 \xe9 uma ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/userTaskNode"},"UserTask"),".\nAcessa o valor de ",(0,o.kt)("strong",{parentName:"p"},"state")," da bag e executa a a\xe7\xe3o ",(0,o.kt)("strong",{parentName:"p"},"victory"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 15")," - O ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 4 \xe9 uma ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/userTaskNode"},"UserTask"),".\nAcessa o valor de ",(0,o.kt)("strong",{parentName:"p"},"errorCount")," da bag e executa a a\xe7\xe3o ",(0,o.kt)("strong",{parentName:"p"},"defeat"),".       ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"}," N\xf3 99 ")," o ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/blueprints"},"n\xf3")," 99 \xe9 um ",(0,o.kt)("a",{parentName:"p",href:"/docs/resources/nodes/finishNode"},"Finish Node")," encerrando o processo. "))),(0,o.kt)("h2",{id:"diagrama"},"Diagrama"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"forca",src:t(3295).Z})),(0,o.kt)("h2",{id:"blueprint"},"Blueprint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="forca"',title:'"forca"'},'{\n   "name":"forca",\n   "description":"",\n   "blueprint_spec":{\n      "requirements":[\n         "core"\n      ],\n      "prepare":[\n         \n      ],\n      "nodes":[\n         {\n            "id":"1",\n            "type":"Start",\n            "name":"Start node",\n            "parameters":{\n               "input_schema":{\n                  \n               }\n            },\n            "next":"2",\n            "lane_id":"1"\n         },\n         {\n            "id":"2",\n            "type":"ScriptTask",\n            "name":"Generate initial values",\n            "next":"3",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  \n               },\n               "script":{\n                  "function":[\n                     "fn",\n                     [\n                        "&",\n                        "args"\n                     ],\n                     [\n                        "let",\n                        [\n                           "index",\n                           [\n                              "js",\n                              [\n                                 ".",\n                                 "Math",\n                                 [\n                                    "`",\n                                    "floor"\n                                 ],\n                                 [\n                                    "*",\n                                    [\n                                       ".",\n                                       "Math",\n                                       [\n                                          "`",\n                                          "random"\n                                       ]\n                                    ],\n                                    [\n                                       ".",\n                                       "Math",\n                                       [\n                                          "`",\n                                          "floor"\n                                       ],\n                                       3\n                                    ]\n                                 ]\n                              ]\n                           ],\n                           "words",\n                           [\n                              "list",\n                              [\n                                 "`",\n                                 "test"\n                              ],\n                              [\n                                 "`",\n                                 "game"\n                              ],\n                              [\n                                 "`",\n                                 "example"\n                              ]\n                           ],\n                           "word",\n                           [\n                              "nth",\n                              "words",\n                              "index"\n                           ],\n                           "state",\n                           [\n                              "js",\n                              [\n                                 "str",\n                                 [\n                                    "`",\n                                    "let word = \'"\n                                 ],\n                                 "word",\n                                 [\n                                    "`",\n                                    "\';word.replace(/./g, \'_\');"\n                                 ]\n                              ]\n                           ]\n                        ],\n                        [\n                           "set",\n                           [\n                              "set",\n                              {\n                                 "errorCount":0,\n                                 "isPrivate":true\n                              },\n                              [\n                                 "`",\n                                 "state"\n                              ],\n                              "state"\n                           ],\n                           [\n                              "`",\n                              "word"\n                           ],\n                           "word"\n                        ]\n                     ]\n                  ]\n               }\n            }\n         },\n         {\n            "id":"3",\n            "type":"SystemTask",\n            "category":"SetToBag",\n            "name":"Set initial values to the bag",\n            "next":"4",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "word":{\n                     "$ref":"result.word"\n                  },\n                  "state":{\n                     "$ref":"result.state"\n                  },\n                  " errorCount":{\n                     "$ref":"result.errorCount"\n                  },\n                  "isPrivate":{\n                     "$ref":"result.isPrivate"\n                  }\n               }\n            }\n         },\n         {\n            "id":"4",\n            "type":"UserTask",\n            "name":"User input letter",\n            "next":"5",\n            "lane_id":"1",\n            "parameters":{\n               "action":"letterInput",\n               "input":{\n                  "state":{\n                     "$ref":"bag.state"\n                  },\n                  "errorCount":{\n                     "$ref":"bag.errorCount"\n                  },\n                  "isPrivate":{\n                     "$ref":"bag.isPrivate"\n                  }\n               }\n            }\n         },\n         {\n            "id":"5",\n            "type":"ScriptTask",\n            "name":"test",\n            "next":"6",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "userInput":{\n                     "$ref":"result.activities[0]"\n                  },\n                  "creatorId":{\n                     "$ref":"bag.creatorId"\n                  }\n               },\n               "script":{\n                  "function":[\n                     "fn",\n                     [\n                        "input",\n                        "&",\n                        "args"\n                     ],\n                     [\n                        "let",\n                        [\n                           "inputData",\n                           [\n                              "get",\n                              [\n                                 "get",\n                                 "input",\n                                 [\n                                    "`",\n                                    "userInput"\n                                 ]\n                              ],\n                              [\n                                 "`",\n                                 "data"\n                              ]\n                           ],\n                           "letter",\n                           [\n                              "get",\n                              "inputData",\n                              [\n                                 "`",\n                                 "letter"\n                              ]\n                           ],\n                           "changePermission",\n                           [\n                              "if",\n                              [\n                                 "=",\n                                 [\n                                    "get",\n                                    "input",\n                                    [\n                                       "`",\n                                       "creatorId"\n                                    ]\n                                 ],\n                                 [\n                                    "get",\n                                    "inputData",\n                                    [\n                                       "`",\n                                       "actorId"\n                                    ]\n                                 ]\n                              ],\n                              true,\n                              false\n                           ]\n                        ],\n                        [\n                           "set",\n                           [\n                              "set",\n                              {\n                                 \n                              },\n                              [\n                                 "`",\n                                 "inputType"\n                              ],\n                              [\n                                 "if",\n                                 [\n                                    "null?",\n                                    "letter"\n                                 ],\n                                 [\n                                    "if",\n                                    "changePermission",\n                                    [\n                                       "`",\n                                       "changePermission"\n                                    ],\n                                    [\n                                       "`",\n                                       "unauthorized"\n                                    ]\n                                 ],\n                                 [\n                                    "`",\n                                    "letterInput"\n                                 ]\n                              ]\n                           ],\n                           [\n                              "`",\n                              "letterInput"\n                           ],\n                           "letter"\n                        ]\n                     ]\n                  ]\n               }\n            }\n         },\n         {\n            "id":"6",\n            "type":"SystemTask",\n            "category":"SetToBag",\n            "name":"Set input letter on bag",\n            "next":"7",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "letterInput":{\n                     "$ref":"result.letterInput"\n                  },\n                  "inputType":{\n                     "$ref":"result.inputType"\n                  }\n               }\n            }\n         },\n         {\n            "id":"7",\n            "type":"Flow",\n            "name":"Control change permission or letter input",\n            "next":{\n               "unauthorized":"4",\n               "changePermission":"8",\n               "letterInput":"10",\n               "default":"4"\n            },\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "inputType":{\n                     "$ref":"result.inputType"\n                  }\n               }\n            }\n         },\n         {\n            "id":"8",\n            "type":"ScriptTask",\n            "name":"Change permission",\n            "next":"9",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "isPrivate":{\n                     "$ref":"bag.isPrivate"\n                  }\n               },\n               "script":{\n                  "function":[\n                     "fn",\n                     [\n                        "input",\n                        "&",\n                        "args"\n                     ],\n                     [\n                        "set",\n                        {\n                           \n                        },\n                        [\n                           "`",\n                           "isPrivate"\n                        ],\n                        [\n                           "not",\n                           [\n                              "get",\n                              "input",\n                              [\n                                 "`",\n                                 "isPrivate"\n                              ]\n                           ]\n                        ]\n                     ]\n                  ]\n               }\n            }\n         },\n         {\n            "id":"9",\n            "type":"SystemTask",\n            "category":"SetToBag",\n            "name":"Change isPrivate",\n            "next":"4",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "isPrivate":{\n                     "$ref":"result.isPrivate"\n                  }\n               }\n            }\n         },\n         {\n            "id":"10",\n            "type":"ScriptTask",\n            "name":"Check input letter",\n            "next":"11",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "letterInput":{\n                     "$ref":"bag.letterInput"\n                  },\n                  "word":{\n                     "$ref":"bag.word"\n                  },\n                  "state":{\n                     "$ref":"bag.state"\n                  },\n                  "errorCount":{\n                     "$ref":"bag.errorCount"\n                  }\n               },\n               "script":{\n                  "function":[\n                    "fn",\n                    ["input","&","args"],\n                    ["js",\n                    ["str",["`", "let input = "],"input",\n                      ["`", "; let letters = input.state.split(\'\'); let index = input.word.indexOf(input.letterInput); \\\n                    let error = index === -1; while(index !== -1) { \\\n                      letters[index] = input.letterInput; index = input.word.indexOf(input.letterInput, index + 1); \\\n                    }; \\\n                    let result = {errorCount: error ? input.errorCount + 1 : input.errorCount, state: letters.join(\'\')};result;\\\n                  "\n                     ]\n                  ]\n                ]\n                 \n            ]\n               }\n            }\n         },\n         {\n            "id":"11",\n            "type":"SystemTask",\n            "category":"SetToBag",\n            "name":"Update error count and state",\n            "next":"12",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "errorCount":{\n                     "$ref":"result.errorCount"\n                  },\n                  "state":{\n                     "$ref":"result.state"\n                  }\n               }\n            }\n         },\n         {\n            "id":"12",\n            "type":"ScriptTask",\n            "name":"Check error count",\n            "next":"13",\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "state":{\n                     "$ref":"bag.state"\n                  },\n                  "word":{\n                     "$ref":"bag.word"\n                  },\n                  "errorCount":{\n                     "$ref":"bag.errorCount"\n                  }\n               },\n               "script":{\n                  "function":[\n                     "fn",\n                     [\n                        "input",\n                        "&",\n                        "args"\n                     ],\n                     [\n                        "set",\n                        {\n                           \n                        },\n                        [\n                           "`",\n                           "nextStep"\n                        ],\n                        [\n                           "if",\n                           [\n                              "=",\n                              [\n                                 "get",\n                                 "input",\n                                 [\n                                    "`",\n                                    "state"\n                                 ]\n                              ],\n                              [\n                                 "get",\n                                 "input",\n                                 [\n                                    "`",\n                                    "word"\n                                 ]\n                              ]\n                           ],\n                           [\n                              "`",\n                              "victory"\n                           ],\n                           [\n                              "if",\n                              [\n                                 "=",\n                                 [\n                                    "get",\n                                    "input",\n                                    [\n                                       "`",\n                                       "errorCount"\n                                    ]\n                                 ],\n                                 6\n                              ],\n                              [\n                                 "`",\n                                 "defeat"\n                              ],\n                              [\n                                 "`",\n                                 "continue"\n                              ]\n                           ]\n                        ]\n                     ]\n                  ]\n               }\n            }\n         },\n         {\n            "id":"13",\n            "type":"Flow",\n            "name":"Check next step",\n            "next":{\n               "victory":"14",\n               "defeat":"15",\n               "continue":"4",\n               "default":"4"\n            },\n            "lane_id":"1",\n            "parameters":{\n               "input":{\n                  "nextStep":{\n                     "$ref":"result.nextStep"\n                  }\n               }\n            }\n         },\n         {\n            "id":"14",\n            "type":"UserTask",\n            "name":"User victory",\n            "next":"99",\n            "lane_id":"1",\n            "parameters":{\n               "action":"victory",\n               "input":{\n                  "state":{\n                     "$ref":"bag.state"\n                  }\n               }\n            }\n         },\n         {\n            "id":"15",\n            "type":"UserTask",\n            "name":"User defeat",\n            "next":"99",\n            "lane_id":"1",\n            "parameters":{\n               "action":"defeat",\n               "input":{\n                  "errorCount":{\n                     "$ref":"bag.errorCount"\n                  }\n               }\n            }\n         },\n         {\n            "id":"99",\n            "type":"Finish",\n            "name":"Finish node",\n            "next":null,\n            "lane_id":"1"\n         }\n      ],\n      "lanes":[\n         {\n            "id":"1",\n            "name":"default",\n            "rule":[\n               "fn",\n               [\n                  "&",\n                  "args"\n               ],\n               true\n            ]\n         }\n      ],\n      "environment":{\n         \n      }\n   }\n}\n')))}m.isMDXComponent=!0},3295:function(n,e,t){"use strict";e.Z=t.p+"assets/images/forca-5e04e6cc4cde8ebec9edc9f2cbd3ff4d.png"}}]);