(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[8781],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),f=i,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5413:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return l}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:2},s={unversionedId:"engine/models/activity_data",id:"engine/models/activity_data",isDocsHomePage:!1,title:"Activity Data",description:"JSON Schema",source:"@site/docs/engine/models/activity_data.md",sourceDirName:"engine/models",slug:"/engine/models/activity_data",permalink:"/flow-build.github.io/docs/engine/models/activity_data",editUrl:"https://bitbucket.org/fdtedsd/workflow-api-doc/src/master/docs/engine/models/activity_data.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"engineSidebar",previous:{title:"Activity",permalink:"/flow-build.github.io/docs/engine/models/activity"},next:{title:"Activity Manager",permalink:"/flow-build.github.io/docs/engine/models/activity_manager"}},p=[{value:"JSON Schema",id:"json-schema",children:[]}],u={toc:p};function l(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"json-schema"},"JSON Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"activity_data":{\n   "type":"object",\n   "properties":{\n      "id": { "type":"string", "format":"uuid" },\n      "created_at": { "type":"string", "format":"date-time" },\n      "type": { "type":"string" },\n      "process_state_id": { "type":"string", "format":"uuid" },\n      "props": { "type":"object" },\n      "parameters": { "$ref": "#/modelos/activity_manager/parameters" },\n      "activity_status": { "type":"string" },\n      "process_id": { "type":"string", "format":"uuid" },\n      "step_number": { "type":"integer" },\n      "node_id": { "type":"string" },\n      "next_node_id": { "type":"string" },\n      "bag": { "type":"object" },\n      "external_input": { "type":"object" },\n      "error": { "type":"string" },\n      "process_status": { "type":"string" },\n      "workflow_id": { "type":"string", "format":"uuid" },\n      "blueprint_spec": { "$ref":"#/models/workflow/blueprint_spec" },\n      "current_status": { "type":"string" },\n      "workflow_name": { "type":"string" },\n      "workflow_description":{ "type":"string" }\n   }\n}\n')))}l.isMDXComponent=!0}}]);