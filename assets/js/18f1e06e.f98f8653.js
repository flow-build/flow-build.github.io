(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[3491],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(r),d=o,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||i;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3116:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=["components"],c={sidebar_position:12},s={unversionedId:"engine/functions/fetchAvailableActivityForProcess",id:"engine/functions/fetchAvailableActivityForProcess",isDocsHomePage:!1,title:"fetchAvailableActivityForProcess",description:"Retorna a atividade mais recente mais recente do processo cujo status da atividade \xe9 *started em que o actor tem permiss\xe3o de acesso.",source:"@site/docs/engine/functions/fetchAvailableActivityForProcess.md",sourceDirName:"engine/functions",slug:"/engine/functions/fetchAvailableActivityForProcess",permalink:"/flow-build.github.io/docs/engine/functions/fetchAvailableActivityForProcess",editUrl:"https://bitbucket.org/fdtedsd/workflow-api-doc/src/master/docs/engine/functions/fetchAvailableActivityForProcess.md",version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"engineSidebar",previous:{title:"fetchAvailableActivitiesForActor",permalink:"/flow-build.github.io/docs/engine/functions/fetchAvailableActivitiesForActor"},next:{title:"fetchDoneActivitiesForActor",permalink:"/flow-build.github.io/docs/engine/functions/fetchDoneActivitiesForActor"}},u=[{value:"Type",id:"type",children:[]},{value:"Input",id:"input",children:[]},{value:"Output",id:"output",children:[]}],l={toc:u};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Retorna a atividade mais recente ",(0,i.kt)("em",{parentName:"p"},"mais recente")," do processo cujo status da atividade \xe9 *",(0,i.kt)("em",{parentName:"p"},"started")," em que o actor tem permiss\xe3o de acesso."),(0,i.kt)("h2",{id:"type"},"Type"),(0,i.kt)("p",null,"READ"),(0,i.kt)("h2",{id:"input"},"Input"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"parameters"),": process_id,  actor_data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=Schema",title:"Schema"},'{\n    "process_id": { "type": "string", "format": "uuid" },\n    "actor_data": { "$ref": "#/models/Actor Data" }\n    "required": ["process_id","actor_data"]\n}\n')),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../models/actor_data"},"Actor Data")),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../models/processActivity"},"Process Activity")))}p.isMDXComponent=!0}}]);