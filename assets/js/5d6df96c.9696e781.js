(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[8233],{3905:function(e,n,a){"use strict";a.d(n,{Zo:function(){return c},kt:function(){return l}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=t.createContext({}),p=function(e){var n=t.useContext(d),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),l=r,f=m["".concat(d,".").concat(l)]||m[l]||u[l]||o;return a?t.createElement(f,i(i({ref:n},c),{},{components:a})):t.createElement(f,i({ref:n},c))}));function l(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4647:function(e,n,a){"use strict";a.r(n),a.d(n,{frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var t=a(2122),r=a(9756),o=(a(7294),a(3905)),i=["components"],s={},d={unversionedId:"resources/examples/pizzaV3",id:"resources/examples/pizzaV3",isDocsHomePage:!1,title:"Pizza v3",description:"Diagrama",source:"@site/docs/resources/examples/pizzaV3.md",sourceDirName:"resources/examples",slug:"/resources/examples/pizzaV3",permalink:"/docs/resources/examples/pizzaV3",editUrl:"https://bitbucket.org/fdtedsd/workflow-api-doc/src/master/docs/resources/examples/pizzaV3.md",version:"current",frontMatter:{},sidebar:"resourcesSidebar",previous:{title:"Pizza v2",permalink:"/docs/resources/examples/pizzaV2"},next:{title:"Escrever um cap\xedtulo",permalink:"/docs/resources/examples/escreverCapitulo"}},p=[{value:"Diagrama",id:"diagrama",children:[]},{value:"Descri\xe7\xe3o",id:"descri\xe7\xe3o",children:[]},{value:"Blueprint",id:"blueprint",children:[]}],c={toc:p};function u(e){var n=e.components,s=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},c,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"diagrama"},"Diagrama"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"pizza-3",src:a(6495).Z})),(0,o.kt)("h2",{id:"descri\xe7\xe3o"},"Descri\xe7\xe3o"),(0,o.kt)("p",null,"Essa \xe9 a terceira vers\xe3o de como um processo de pedir pizza pode ser.\nO processo inicia como qualquer outro, a partir do Start Node.\nConforme os processo anteriores, o pedido \xe9 aceito, o preparo tem seu in\xedcio e deve ser aguardado o envio da pizza. Ap\xf3s isso, uma checagem no status da pizza \xe9 realizado e, caso a pizza tenha sido entregue, o processo \xe9 finalizado. "),(0,o.kt)("p",null,"Uma segunda situa\xe7\xe3o que pode ocorrer \xe9 a pizza estar em rota de entrega. Nesse momento, ap\xf3s aguardar um per\xedodo\nde tempo, uma nova checagem \xe9 realizada. Se a pizza tiver sido entregue, o processo \xe9 finalizado; se n\xe3o, uma reclama\xe7\xe3o \xe9 realizada, onde o usu\xe1rio pode cancelar o pedido ou aguardar mais um pouco. Caso seja cancelado, o processo \xe9 finalizado."),(0,o.kt)("p",null,"Caso o cliente opte por aguardar, novamente o status do pedido \xe9 checado e, dependendo de seu resultado, o processo retorna para o n\xf3 referente ao status atual\ndo pedido."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"ATEN\xc7\xc3O ")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Esta blueprint n\xe3o est\xe1 terminada, o objetivo \xe9 utiliz\xe1-la como exemplo para treinamento."))),(0,o.kt)("h2",{id:"blueprint"},"Blueprint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="pizzaV3.json"',title:'"pizzaV3.json"'},'{\n    "name": "pizza3",\n    "description": "pizza 3 treinamento",\n    "blueprint_spec": {\n        "requirements": ["core"],\n        "prepare": [],\n        "environment": {},\n        "lanes": [\n          {\n            "id": "free",\n            "name": "free for all",\n            "rule": ["fn", ["&", "args"], true]\n          },\n          {\n            "id": "restaurant",\n            "name": "restaurant",\n            "rule": ["fn", ["actor_data", "bag"],\n                    ["eval", ["apply", "or", ["map", ["fn", ["v"],["=", "v", ["`", "restaurant"]]],\n                    ["get", "actor_data", ["`", "claims"]]]]]\n            ]\n          },\n          {\n            "id": "cx",\n            "name": "customer support",\n            "rule": ["fn", ["actor_data", "bag"],\n                    ["eval", ["apply", "or", ["map", ["fn", ["v"],["=", "v", ["`", "cx"]]],\n                    ["get", "actor_data", ["`", "claims"]]]]]\n            ]\n          }, {\n            "id": "customer",\n            "name": "creatorOnly",\n            "rule": ["fn", ["actor_data", "bag"],\n                    ["=", ["get", "bag", ["`", "creatorId"]],\n                    ["get", "actor_data", ["`", "actor_id"]]]\n            ]\n        }\n        ],\n        "nodes": [\n          {\n            "name": "Start pizza3",\n            "type": "Start",\n            "lane_id": "free",\n            "id": "1",\n            "next": "1-1",\n            "parameters": {\n              "input_schema": {\n                "type": "object",\n                "properties": {\n                  "id": { "type": "string", "format": "uuid" },\n                  "name": { "type": "string" }\n                },\n                "required": ["name"]\n              }\n            }\n          },\n          {\n            "id": "1-1",\n            "name": "Order Pizza",\n            "type": "userTask",\n            "lane_id": "free",\n            "next": "1-1A",\n            "parameters": {\n              "action": "ORDER_PIZZA",\n              "input": {},\n              "activity_manager": "commit"\n            }\n          },\n          {\n            "id": "1-1A",\n            "name": "bag actor_id",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "free",\n            "next": "1-1B",\n            "parameters": {\n              "input": {\n                "creatorId": { "$ref": "actor_data.actor_id" },\n                "user_data": { "$ref": "result.activities[0].data" }\n              }\n            }\n          },\n          {\n            "id": "1-1B",\n            "name": "bag actor_id",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "free",\n            "next": "1-2",\n            "parameters": {\n              "input": {\n                "key": { "$js": "({bag}) => (!bag.user_data.qty || !bag.user_data.flavors || bag.user_data.flavors.length == 0) ? false : true" }\n              }\n            }\n          },\n          {\n            "id": "1-2",\n            "name": "is order correct",\n            "type": "flow",\n            "lane_id": "customer",\n            "next": {\n              "false": "2-99",\n              "true": "1-3",\n              "default": "1-3"\n            },\n            "parameters": {\n              "input": {\n                "key": { "$ref": "bag.key" }\n              }\n            }\n          },{\n            "id": "1-3",\n            "name": "take the order",\n            "type": "systemTask",\n            "category": "http",\n            "lane_id": "customer",\n            "next": "1-3A",\n            "parameters": {\n              "input": {\n                "status": "pending",\n                "qty": { "$ref": "bag.user_data.qty" },\n                "flavors": { "$ref": "bag.user_data.flavors"},\n                "comments": { "$ref": "bag.user_data.comments" }\n              },\n              "request": {\n                "url": "https://5faabe16b5c645001602b152.mockapi.io/order",\n                "verb": "POST",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },\n          {\n            "id": "1-3A",\n            "name": "bag order",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "customer",\n            "next": "1-4",\n            "parameters": {\n              "input": {\n                "order": { "$ref": "result.data" }\n              }\n            }\n          },{\n            "id": "1-4",\n            "name": "acknowledge order",\n            "type": "userTask",\n            "lane_id": "restaurant",\n            "next": "1-5",\n            "parameters": {\n              "action": "ACKNOWLEDGE_ORDER",\n              "activity_manager": "commit",\n              "input": {\n                  "order": { "$ref": "bag.order" }\n              }\n            }\n          },{\n            "id": "1-5",\n            "name": "is order ok",\n            "type": "flow",\n            "lane_id": "restaurant",\n            "next": {\n              "true": "1-6",\n              "false": "3-99",\n              "default": "3-99"\n            },\n            "parameters": {\n              "input": {\n                "key": { "$ref": "result.activities[0].data.order_ok" }\n              }\n            }\n          },\n          {\n            "id": "1-6",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "1-6A",\n            "lane_id": "restaurant",\n            "parameters": {\n              "input": {\n                "status": "started"\n              },\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },{\n            "id": "1-6A",\n            "name": "bag order",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "customer",\n            "next": "1-7",\n            "parameters": {\n              "input": {\n                "order": { "$ref": "result.data" }\n              }\n            }\n          },\n          {\n            "id": "1-7",\n            "name": "notify user pizza started",\n            "type": "userTask",\n            "lane_id": "customer",\n            "next": "1-8",\n            "parameters": {\n              "action": "NOTIFY_USER",\n              "input": {\n                "orderNo": { "$ref": "bag.order.id" },\n                "message": "seu pedido foi iniciado"\n              },\n              "activity_manager": "notify"\n            }\n          },\n          {\n            "id": "1-8",\n            "type": "SystemTask",\n            "name": "wait 1 minutes",\n            "category": "Timer",\n            "next": "1-9",\n            "lane_id": "customer",\n            "parameters": {\n              "input": {},\n              "timeout": 60\n            }\n          },{\n            "id": "1-9",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "1-10",\n            "lane_id": "restaurant",\n            "parameters": {\n              "input": {},\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "GET",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },{\n            "id": "1-10",\n            "name": "order status",\n            "type": "flow",\n            "lane_id": "restaurant",\n            "next": {\n              "received": "1-99",\n              "on_route": "4-1",\n              "default": "5-1"\n            },\n            "parameters": {\n              "input": {\n                "key": { "$ref": "result.data.status" }\n              }\n            }\n          },\n          {\n            "id": "1-99",\n            "name": "Finish - Order delivered",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          },\n          {\n            "id": "2-99",\n            "name": "Finish - Order incorrect",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          },\n          {\n            "id": "3-99",\n            "name": "Finish - Order cannot be done",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          },\n          {\n            "id": "4-1",\n            "type": "SystemTask",\n            "name": "wait 5 minutes",\n            "category": "Timer",\n            "next": "1-9",\n            "lane_id": "customer",\n            "parameters": {\n              "input": {},\n              "timeout": 60\n            }\n          },{\n            "id": "5-1",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "5-2",\n            "lane_id": "restaurant",\n            "parameters": {\n              "input": {\n                "status": "complaim"\n              },\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },{\n            "id": "5-2",\n            "type": "userTask",\n            "name": "Contact Customer",\n            "next": "5-3",\n            "lane_id": "cx",\n            "parameters": {\n              "action": "CONTACT_CUSTOMER",\n              "input": {\n                "order": { "$ref": "bag.order" }\n              },\n              "activity_manager": "commit"\n            }\n          },{\n            "id": "5-3",\n            "type": "Flow",\n            "name": "action",\n            "lane_id": "cx",\n            "next": {\n              "cancel": "6-1",\n              "wait": "5-4",\n              "default": "5-4"\n            },\n            "parameters": {\n              "input": {\n                "decision": { "$ref": "result.activities[0].data.action" }\n              }\n            }\n          },{\n            "id": "5-4",\n            "type": "systemTask",\n            "category": "timer",\n            "name": "wait X minutes",\n            "lane_id": "cx",\n            "next": "1-9",\n            "parameters": {\n              "input": {},\n              "timeout": 60\n            }\n          },{\n            "id": "6-1",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "6-99",\n            "lane_id": "cx",\n            "parameters": {\n              "input": {\n                "status": "cancel"\n              },\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },\n          {\n            "id": "6-99",\n            "name": "Finish - Order cancelled",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          }\n        ]\n    }\n}\n')))}u.isMDXComponent=!0},6495:function(e,n,a){"use strict";n.Z=a.p+"assets/images/pizza-3-764de8e188634e5ab980d3cdea051070.png"}}]);