(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[8407],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,s=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),f=u(n),d=i,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return n?r.createElement(m,a(a({ref:e},l),{},{components:n})):r.createElement(m,a({ref:e},l))}));function d(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:i,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8783:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:13},s={unversionedId:"engine/functions/fetchDoneActivitiesForActor",id:"engine/functions/fetchDoneActivitiesForActor",isDocsHomePage:!1,title:"fetchDoneActivitiesForActor",description:"Lista as atividades acess\xedveis pelo actor cujo status do activity manager \xe9 completed.",source:"@site/docs/engine/functions/fetchDoneActivitiesForActor.md",sourceDirName:"engine/functions",slug:"/engine/functions/fetchDoneActivitiesForActor",permalink:"/docs/engine/functions/fetchDoneActivitiesForActor",editUrl:"https://github.com/flow-build/flow-build.github.io/docs/engine/functions/fetchDoneActivitiesForActor.md",version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"engineSidebar",previous:{title:"fetchAvailableActivityForProcess",permalink:"/docs/engine/functions/fetchAvailableActivityForProcess"},next:{title:"fetchPackage",permalink:"/docs/engine/functions/fetchPackage"}},u=[{value:"Type",id:"type",children:[]},{value:"Input",id:"input",children:[{value:"Filters",id:"filters",children:[]}]},{value:"Output",id:"output",children:[]}],l={toc:u};function p(t){var e=t.components,n=(0,i.Z)(t,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Lista as atividades acess\xedveis pelo actor cujo status do activity manager \xe9 ",(0,o.kt)("strong",{parentName:"p"},"completed"),"."),(0,o.kt)("h2",{id:"type"},"Type"),(0,o.kt)("p",null,"READ"),(0,o.kt)("h2",{id:"input"},"Input"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"parameters"),": actor_data, filters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=Schema",title:"Schema"},'{\n    "actor_data": { "$ref": "#/models/Actor Data" },\n    "filters": { \n        "type": "object",\n        "properties": {\n            "workflow_id": { "type": "string", "format": "uuid" },\n            "process_id": { "type": "string", "format": "uuid" },\n            "status": { "type": "string", "enum": ["started","completed","interrupted"] },\n            "type": { "type": "string", "enum": ["commit","notify"] },\n            "current_status": { \n                "type": "array", \n                "items": { "type": "string" },\n                "maxItems": 4\n            }\n        }\n    }\n    "required": ["actor_data"]\n}\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../models/actor_data"},"Actor Data")),(0,o.kt)("h3",{id:"filters"},"Filters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"status"),": status do Activity Manager"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"current_status"),": status atual do processo")),(0,o.kt)("h2",{id:"output"},"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=Schema",title:"Schema"},'{\n    "type": "array",\n    "items": { \n        "$ref": "#/models/Activity Data" \n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../models/activity_data"},"Activity Data")))}p.isMDXComponent=!0}}]);