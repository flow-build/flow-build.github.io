(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[2166],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=s(t),m=o,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||a;return t?n.createElement(d,i(i({ref:r},u),{},{components:t})):n.createElement(d,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1153:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var n=t(2122),o=t(9756),a=(t(7294),t(3905)),i=["components"],c={sidebar_position:7},l={unversionedId:"engine/functions/createProcessByWorkflowName",id:"engine/functions/createProcessByWorkflowName",isDocsHomePage:!1,title:"createProcessByWorkflowName",description:"M\xe9todo an\xe1logo ao m\xe9todo createProcess, por\xe9m ao inv\xe9s de receber o workflowid como par\xe2metro, \xe9 enviado o workflowname.",source:"@site/docs/engine/functions/createProcessByWorkflowName.md",sourceDirName:"engine/functions",slug:"/engine/functions/createProcessByWorkflowName",permalink:"/docs/engine/functions/createProcessByWorkflowName",editUrl:"https://github.com/flow-build/flow-build.github.io/docs/engine/functions/createProcessByWorkflowName.md",version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"engineSidebar",previous:{title:"createProcess",permalink:"/docs/engine/functions/createProcess"},next:{title:"deletePackage",permalink:"/docs/engine/functions/deletePackage"}},s=[{value:"Input",id:"input",children:[]}],u={toc:s};function p(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"M\xe9todo an\xe1logo ao m\xe9todo ",(0,a.kt)("a",{parentName:"p",href:"./createProcess"},"createProcess"),", por\xe9m ao inv\xe9s de receber o workflow_id como par\xe2metro, \xe9 enviado o workflow_name."),(0,a.kt)("p",null,"O flowBuild utiliza sempre o worklfow_id de maior vers\xe3o para o name solicitado."),(0,a.kt)("h2",{id:"input"},"Input"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"parameters"),": workflow_id, actor_data, initial_bag"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=Schema",title:"Schema"},'{\n    "workflow_name": { "type": "string" },\n    "actor_data": { "$ref": "#/models/Actor Data" },\n    "initial_bag": { "type": "object" },\n    "required": ["workflow_id","actor_data"]\n}\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../models/actor_data"},"Actor Data")))}p.isMDXComponent=!0}}]);